{"version":3,"sources":["hooks/useLocalStorage.js","utility/getRandNum.js","components/Tiles/Backgrounds/Masks/Masks.js","components/Tiles/Styles/Styles.js","components/Tiles/Backgrounds/Backgrounds.js","components/Tiles/Symmetrical/Symmetrical.js","components/Tiles/Circular/Circular.js","components/Tiles/Corners/Corners.js","components/Tiles/Objects/Objects.js","components/Tiles/Tiles.js","context/PatternContext.js","components/EditablePattern/EditablePattern.js","components/EditablePattern/PrintPreview/PrintPreview.js","components/UI/FormControls/Label/Label.js","components/UI/FormControls/FormControlWrapper/FormControlWrapper.js","components/EditablePattern/PatternControls/PatternControlsBody/SingleLineInput/SingleLineInput.js","components/UI/Button/Button.js","components/EditablePattern/PatternControls/IconButtons/IconButtons.js","components/EditablePattern/PatternControls/PatternControlsBody/NewPattern/OrientationSelect/OrientationSelect.js","components/UI/FormControls/Slider/Slider.js","components/EditablePattern/PatternControls/PatternControlsBody/NewPattern/ComplexitySlider/ComplexitySlider.js","components/EditablePattern/PatternControls/PatternControlsBody/NewPattern/NewPattern.js","components/EditablePattern/PatternControls/PatternControlsBody/PatternControlsBody.js","components/EditablePattern/PatternControls/PatternControls.js","containers/EditPattern/EditPattern.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getRandNum","number","Math","floor","random","ClippingMask","props","Fragment","id","mask","viewBox","fill","stroke","width","height","children","Circle","cx","cy","r","Diamond","d","sharedStyles","css","StyledSVG","styled","svg","patternColor","SvgButton","rect","RotationGroup","g","rotate","SVG","onClick","click","name","DiagonalPath","path","maskProps","Diagonal","Diagonal2","CrossHatch","Square","CrossHatchWithCircle","DiagonalWithDiamond","DiagonalWithCircle","Circles","CrossGrid","BoxCross","Dashes","CrossGridWithCircles","SquareCorners","x","y","Flower","CurvedTR1","CurvedTR2","SquareTR1","SquareTR2","SquareBR1","SquareBR2","SquareBL1","SquareBL2","SquareTL1","SquareTL2","CurvedBR1","CurvedBR2","CurvedBL1","CurvedBL2","CurvedTL1","CurvedTL2","Crowd","allPatterns","Backgrounds","Symmetrical","Objects","Circular","Corners","patternsArr","pattern","push","SvgWrapper","div","Pattern","NewPattern","num","rotation","initialMaxNo","_","maxNo","length","initialOrientation","portrait","landscape","square","randPatternArray","columns","rows","Array","from","map","PatternContext","React","createContext","PatternContextProvider","patterns","setPatterns","orientation","setOrientation","complexity","setComplexity","label","setColumns","generateRandomPattern","newPattern","useEffect","Provider","switchTile","index","updatedPattern","newNum","updateComplexity","newComplexity","updateOrientation","newOrientation","PrintName","footer","color","PatternWrapper","EditablePattern","useContext","tiledPatterns","i","PrintPreviewContainer","PrintPreview","backgroundColor","LabelWrapper","StyledLabel","Label","htmlFor","for","StyledDiv","formControlWrapper","SingleLineInput","FormControlWrapper","StyledButton","button","StyledIconButton","IconButton","disabled","Button","active","PortraitIcon","LandscapeIcon","SquareIcon","OrientationIcons","OrientationIcon","xmlns","ButtonsContainer","orientations","OrientationSelect","activeOrientation","setActiveOrientation","orientationButtons","updateOrientationHandler","RangeSlider","input","slider","type","min","max","onInput","onChange","ComplexitySlider","Slider","e","target","PatternControlsBody","randomise","currentComplexity","size","Container","PatternControls","PreviewArea","EditPattern","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f551038.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","const getRandNum = number => Math.floor(Math.random() * Math.floor(number));\n\nexport default getRandNum;\n","import React from \"react\";\n\nconst ClippingMask = props => {\n  return (\n    <React.Fragment>\n      <mask id={props.mask} viewBox=\"1 1 39 39\" fill=\"black\" stroke=\"none\">\n        <rect width=\"100%\" height=\"100%\" fill=\"white\" stroke=\"white\" />\n        {props.children}\n      </mask>\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport const Circle = props => (\n  <ClippingMask mask={props.mask}>\n    <circle cx=\"20\" cy=\"20\" r=\"10\" />\n  </ClippingMask>\n);\n\nexport const Diamond = props => (\n  <ClippingMask mask={props.mask}>\n    <path d=\"M20 6L6 20L20 34L34 20L20 6Z\" />\n  </ClippingMask>\n);\n\n// export const Letter = props => (\n//   <ClippingMask>\n//     <text\n//       style={{\n//         x: \"40px\",\n//         y: \"800px\",\n//         textAnchor: \"middle\",\n//         fontWeight: \"900\",\n//         fontSize: \"2.5em\",\n//         transform: \"translate(50%, 85%)\"\n//       }}\n//     >\n//       {props.children}\n//     </text>\n//   </ClippingMask>\n// );\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\n//Should maybe be global styles\nconst sharedStyles = css`\n  stroke-width: 2;\n  width: auto;\n  height: auto;\n  padding: 0;\n  display: inline-block;\n\n  fill: none;\n`;\n\nexport const StyledSVG = styled.svg`\n  ${sharedStyles};\n  stroke: ${props => (props.patternColor ? props.patternColor : \"orange\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst SvgButton = styled.rect`\n  width: 100%;\n  height: 100%;\n  fill: #fff;\n  fill-opacity: 0;\n  stroke: #fff;\n  stroke-opacity: 0;\n`;\n\nexport const RotationGroup = styled.g`\n  transform-origin: 50% 50%;\n  transform: rotate(${props => (props.rotate ? props.rotate : \"0deg\")});\n`;\n\nexport const SVG = props => (\n  <StyledSVG viewBox=\"0 0 40 40\" patternColor={props.patternColor}>\n    {props.children}\n    <SvgButton onClick={props.click} id={props.id} name={props.name} />\n  </StyledSVG>\n);\n\nexport const DiagonalPath = styled.path`\n  stroke-width: 1.5;\n  stroke-linecap: square;\n`;\n","import React from \"react\";\nimport * as Gems from \"./Masks/Masks\";\nimport { DiagonalPath, RotationGroup } from \"../Styles/Styles\";\n\nconst maskProps = mask => {\n  return mask ? \"url(#\" + mask + \")\" : null;\n};\n\nexport const Diagonal = props => {\n  return (\n    <React.Fragment>\n      {props.children}\n      <DiagonalPath\n        d=\"M0 10L10 0M0 20L20 0M0 30L30 0M0 40L40 0M10 40L40 10M40 20L20 40M30 40L40 30\"\n        mask={maskProps(props.mask)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const Diagonal2 = props => (\n  <RotationGroup rotate=\"90deg\">\n    <Diagonal />\n  </RotationGroup>\n);\n\nexport const CrossHatch = props => {\n  return (\n    <React.Fragment>\n      {props.children}\n      <DiagonalPath\n        d=\"M0 40L40 8.74227e-07M0 0L40 40M0 10L10 8.74227e-07L40 30L30 40L0 10ZM0 20L20 8.74227e-07L40 20L20 40L0 20ZM0 30L30 8.74227e-07L40 10L10 40L0 30Z\"\n        mask={maskProps(props.mask)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const Square = props => (\n  <React.Fragment>\n    <path d=\"M30 10H1V39H30V10Z\" />\n    <DiagonalPath d=\"M0 10L10 0M10 10L20 0M20 10L30 0M30 20L40 10M30 10L40 0M30 30L40 20M30 40L40 30\" />\n  </React.Fragment>\n);\n\nexport const CrossHatchWithCircle = props => (\n  <CrossHatch mask=\"crosscircle\">\n    <Gems.Circle mask=\"crosscircle\" />\n  </CrossHatch>\n);\n\nexport const DiagonalWithDiamond = props => (\n  <Diagonal mask=\"diagdiamond\">\n    <Gems.Diamond mask=\"diagdiamond\" />\n  </Diagonal>\n);\n\nexport const DiagonalWithCircle = props => (\n  <Diagonal mask=\"diagcircle\">\n    <Gems.Circle mask=\"diagcircle\" />\n  </Diagonal>\n);\n","import React from \"react\";\nimport { DiagonalPath } from \"../Styles/Styles\";\n\nexport const Circles = props => (\n  <React.Fragment>\n    <circle cx=\"10\" cy=\"30\" r=\"9\" />\n    <circle cx=\"10\" cy=\"10\" r=\"9\" />\n    <circle cx=\"30\" cy=\"10\" r=\"9\" />\n    <circle cx=\"30\" cy=\"30\" r=\"9\" />\n  </React.Fragment>\n);\n\nexport const CrossGrid = props => {\n  return (\n    <React.Fragment>\n      <path d=\"M0 10H40M0 20H40M0 30H40M10 40L10 0M20 40V0M30 40V0\" />\n    </React.Fragment>\n  );\n};\n\nexport const BoxCross = props => (\n  <React.Fragment>\n    <DiagonalPath d=\"M20 10L30 0L40 10L30 20M20 10L30 20M20 10L10 0L0 10L10 20M20 10L10 20M30 20L20 30M30 20L40 30L30 40L20 30M20 30L10 20M20 30L10 40L0 30L10 20\" />\n  </React.Fragment>\n);\n\nexport const Dashes = props => (\n  <React.Fragment>\n    <path d=\"M-1 10H7M41 10H33M-1 20H7M41 20H33M-1 30H7M41 30H33M10 41V33M10 -1V7M20 41V33M20 -1V7M30 41V33M30 -1V7M10 13V17M13 10H17M10 23V27M13 20H17M23 20H27M23 10H27M20 13V17M30 13V17M30 23V27M20 23V27M23 30H27M17 30H13\" />\n  </React.Fragment>\n);\n\nexport const CrossGridWithCircles = props => (\n  <React.Fragment>\n    <path d=\"M-1 10H7M41 10H33M-1 20H7M41 20H33M-1 30H7M41 30H33M10 41V33M10 -1V7M20 41V33M20 -1V7M30 41V33M30 -1V7M10 13V17M13 10H17M10 23V27M13 20H17M23 20H27M23 10H27M20 13V17M30 13V17M30 23V27M20 23V27M23 30H27M17 30H13\" />\n    <circle cx=\"10\" cy=\"10\" r=\"3\" />\n    <circle cx=\"10\" cy=\"20\" r=\"3\" />\n    <circle cx=\"10\" cy=\"30\" r=\"3\" />\n    <circle cx=\"20\" cy=\"30\" r=\"3\" />\n    <circle cx=\"30\" cy=\"20\" r=\"3\" />\n    <circle cx=\"30\" cy=\"30\" r=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"3\" />\n    <circle cx=\"20\" cy=\"10\" r=\"3\" />\n    <circle cx=\"30\" cy=\"10\" r=\"3\" />\n  </React.Fragment>\n);\n\nexport const SquareCorners = props => (\n  <React.Fragment>\n    <path d=\"M-1 10H7M41 10H33M-1 30H7M41 30H33M10 41V33M10 -1V7M30 41V33M30 -1V7\" />\n    <rect x=\"6\" y=\"24\" width=\"10\" height=\"10\" />\n    <rect x=\"6\" y=\"6\" width=\"10\" height=\"10\" />\n    <rect x=\"24\" y=\"24\" width=\"10\" height=\"10\" />\n    <rect x=\"24\" y=\"6\" width=\"10\" height=\"10\" />\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { DiagonalPath } from \"../Styles/Styles\";\n\nexport const Flower = props => (\n  <React.Fragment>\n    <circle cx=\"20\" cy=\"20\" r=\"10\" />\n    <path d=\"M20 10V0M0 20H10M20 30V40M30 20H40M12.9289 12.9289L5 5M5 35L12.9289 27.0711M27.0711 27.0711L35 35M27.0711 12.9289L35 5\" />\n    <circle cx=\"20\" cy=\"20\" r=\"4\" />\n    <DiagonalPath d=\"M0 10L10 0M30 40L40 30M0 30L10 40M30 0L40 10\" />\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { RotationGroup, DiagonalPath } from \"../Styles/Styles\";\n\nexport const CurvedTR1 = props => (\n  <React.Fragment>\n    <path d=\"M0 30C5.52285 30 10 34.4772 10 40M0 20C11.0457 20 20 28.9543 20 40M0 10C16.5685 10 30 23.4315 30 40\" />\n    <DiagonalPath d=\"M10 0L0 10M20 0L9 11M30 0L15.5 14.5M40 0L21.5 18.5M40 10L25.5 24.5M40 20L29 31M40 30L30 40\" />\n  </React.Fragment>\n);\n\nexport const CurvedTR2 = props => (\n  <React.Fragment>\n    <path d=\"M0 30C5.52285 30 10 34.4772 10 40M0 20C11.0457 20 20 28.9543 20 40M0 10C16.5685 10 30 23.4315 30 40\" />\n    <DiagonalPath d=\"M27 27L40 40M0 0L13 13M10 0L40 30M20 0L40 20M30 0L40 10\" />\n  </React.Fragment>\n);\n\nexport const SquareTR1 = props => (\n  <React.Fragment>\n    <path d=\"M0 30H10V40M0 20H20V40M0 10H30V40\" />\n    <DiagonalPath d=\"M0 10L10 0M10 10L20 0M20 10L30 0M30 20L40 10M30 10L40 0M30 30L40 20M30 40L40 30\" />\n  </React.Fragment>\n);\n\nexport const SquareTR2 = props => (\n  <React.Fragment>\n    <path d=\"M0 30H10V40M0 20H20V40M0 10H30V40\" />\n    <DiagonalPath d=\"M31 31L40 40M0 0L9 9M10 0L19 9M40 30L31 21M20 0L40 20M30 0L40 10\" />\n  </React.Fragment>\n);\n\nexport const SquareBR1 = props => (\n  <RotationGroup rotate=\"90deg\">\n    <SquareTR1 />\n  </RotationGroup>\n);\n\nexport const SquareBR2 = props => (\n  <RotationGroup rotate=\"90deg\">\n    <SquareTR2 />\n  </RotationGroup>\n);\n\nexport const SquareBL1 = props => (\n  <RotationGroup rotate=\"180deg\">\n    <SquareTR1 />\n  </RotationGroup>\n);\n\nexport const SquareBL2 = props => (\n  <RotationGroup rotate=\"180deg\">\n    <SquareTR2 />\n  </RotationGroup>\n);\n\nexport const SquareTL1 = props => (\n  <RotationGroup rotate=\"270deg\">\n    <SquareTR1 />\n  </RotationGroup>\n);\n\nexport const SquareTL2 = props => (\n  <RotationGroup rotate=\"270deg\">\n    <SquareTR2 />\n  </RotationGroup>\n);\n\nexport const CurvedBR1 = props => (\n  <RotationGroup rotate=\"90deg\">\n    <CurvedTR1 />\n  </RotationGroup>\n);\n\nexport const CurvedBR2 = props => (\n  <RotationGroup rotate=\"90deg\">\n    <CurvedTR2 />\n  </RotationGroup>\n);\n\nexport const CurvedBL1 = props => (\n  <RotationGroup rotate=\"180deg\">\n    <CurvedTR1 />\n  </RotationGroup>\n);\n\nexport const CurvedBL2 = props => (\n  <RotationGroup rotate=\"180deg\">\n    <CurvedTR2 />\n  </RotationGroup>\n);\n\nexport const CurvedTL1 = props => (\n  <RotationGroup rotate=\"270deg\">\n    <CurvedTR1 />\n  </RotationGroup>\n);\n\nexport const CurvedTL2 = props => (\n  <RotationGroup rotate=\"270deg\">\n    <CurvedTR2 />\n  </RotationGroup>\n);\n","import React from \"react\";\n\nexport const Crowd = props => (\n  <React.Fragment>\n    <circle cx=\"10\" cy=\"6\" r=\"5\" />\n    <circle cx=\"30\" cy=\"6\" r=\"5\" />\n    <circle cx=\"20\" cy=\"25\" r=\"5\" />\n    <circle cx=\"40\" cy=\"25\" r=\"5\" />\n    <circle cy=\"25\" r=\"5\" />\n    <circle cy=\"40\" r=\"10\" />\n    <circle cx=\"20\" cy=\"40\" r=\"10\" />\n    <circle cx=\"40\" cy=\"40\" r=\"10\" />\n    <path d=\"M1 20.5C1 15.2533 5.25329 11 10.5 11C15.7467 11 20 15.2533 20 20.5M20 20C20 15.0294 24.2533 11 29.5 11C34.7467 11 39 15.0294 39 20\" />\n  </React.Fragment>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as Backgrounds from \"./Backgrounds/Backgrounds\";\nimport * as Symmetrical from \"./Symmetrical/Symmetrical\";\nimport * as Circular from \"./Circular/Circular\";\nimport * as Corners from \"./Corners/Corners\";\nimport * as Objects from \"./Objects/Objects\";\nimport { SVG } from \"./Styles/Styles\";\n\nexport const allPatterns = {\n  ...Backgrounds,\n  ...Symmetrical,\n  ...Objects,\n  ...Circular,\n  ...Corners\n};\n\nconst patternsArr = [];\nfor (let pattern in allPatterns) {\n  patternsArr.push(allPatterns[pattern]);\n}\n\nconst SvgWrapper = styled.div`\n  display: block;\n  width: auto;\n  height: auto;\n  padding-top: 100%;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst Pattern = props => {\n  const NewPattern = patternsArr[props.num];\n  return (\n    <SvgWrapper>\n      <SVG\n        click={props.click}\n        id={props.id}\n        rotation={props.rotation}\n        name={patternsArr[props.num].name}\n        patternColor={props.patternColor}\n      >\n        <NewPattern />\n      </SVG>\n    </SvgWrapper>\n  );\n};\n\nexport default Pattern;\n","import React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport getRandNum from \"../utility/getRandNum\";\nimport { allPatterns } from \"../components/Tiles/Tiles\";\n\nconst initialMaxNo = [];\nfor (const _ in allPatterns) {\n  initialMaxNo.push(_);\n}\nconst maxNo = initialMaxNo.length;\n\nconst initialOrientation = {\n  portrait: [\n    [4, 5],\n    [5, 7],\n    [6, 8]\n  ],\n  landscape: [\n    [5, 4],\n    [7, 5],\n    [8, 6]\n  ],\n  square: [\n    [4, 4],\n    [5, 5],\n    [6, 6]\n  ]\n};\n\nconst randPatternArray = (columns, rows) => {\n  return Array.from({\n    length: columns * rows\n  }).map(x => getRandNum(maxNo));\n};\n\nexport const PatternContext = React.createContext();\n\nconst PatternContextProvider = props => {\n  const [patterns, setPatterns] = useLocalStorage(\n    \"patterns\",\n    randPatternArray(4, 5)\n  );\n  const [orientation, setOrientation] = useLocalStorage(\n    \"orientation\",\n    \"portrait\"\n  );\n  const [complexity, setComplexity] = useLocalStorage(\"complexity\", 0);\n  const [patternColor] = useLocalStorage(\"patternColour\", \"var(--trim)\");\n  const [label] = useLocalStorage(\"label\", \"Charlotte\");\n\n  const [columns, setColumns] = useState();\n\n  const updateComplexityHandler = newComplexity => {\n    setComplexity(newComplexity);\n    generateRandomPattern(orientation, newComplexity);\n  };\n\n  const updateOrientationHandler = newOrientation => {\n    setOrientation(newOrientation);\n    generateRandomPattern(newOrientation, complexity);\n  };\n\n  const generateRandomPattern = (orientation, complexity) => {\n    const newPattern = randPatternArray(\n      initialOrientation[orientation][complexity][0],\n      initialOrientation[orientation][complexity][1]\n    );\n    setPatterns(newPattern);\n  };\n\n  const switchTileHandler = index => {\n    const updatedPattern = [...patterns];\n    let newNum = getRandNum(maxNo);\n    while (patterns[index] === newNum) {\n      newNum = getRandNum(maxNo);\n    }\n    updatedPattern[index] = newNum;\n    setPatterns(updatedPattern);\n  };\n\n  useEffect(() => {\n    setColumns(initialOrientation[orientation][complexity][0]);\n  }, [orientation, complexity]);\n\n  return (\n    <PatternContext.Provider\n      value={{\n        patterns,\n        patternColor,\n        label,\n        orientation,\n        columns,\n        complexity,\n\n        switchTile: switchTileHandler,\n        updateComplexity: updateComplexityHandler,\n        updateOrientation: updateOrientationHandler,\n        newPattern: generateRandomPattern\n      }}\n    >\n      {props.children}\n    </PatternContext.Provider>\n  );\n};\n\nexport default PatternContextProvider;\n","import React, { useContext } from \"react\";\nimport { PatternContext } from \"../../context/PatternContext\";\nimport styled from \"styled-components\";\nimport Pattern from \"../Tiles/Tiles\";\n\nconst PrintName = styled.footer`\n  display: none;\n  @media print {\n    display: block;\n    color: ${props => (props.color ? props.color : \"grey\")};\n    text-align: left;\n    margin-top: 10px;\n  }\n`;\n\nconst PatternWrapper = styled.div`\n  display: grid;\n  grid: auto-flow / repeat(${props => props.columns}, 1fr);\n  height: auto;\n  width: auto;\n`;\n\nconst EditablePattern = props => {\n  const { patterns, columns, switchTile, patternColor, label } = useContext(\n    PatternContext\n  );\n\n  const tiledPatterns = patterns.map((pattern, i) => {\n    return (\n      <Pattern\n        key={i}\n        id={i}\n        patternColor={patternColor}\n        num={patterns[i]}\n        click={() => switchTile(i)}\n      />\n    );\n  });\n\n  return (\n    <PatternWrapper columns={columns}>\n      {tiledPatterns}\n      <PrintName color={patternColor}>{label}</PrintName>\n    </PatternWrapper>\n  );\n};\n\nexport default EditablePattern;\n","import React, { useContext } from \"react\";\nimport { PatternContext } from \"../../../context/PatternContext\";\nimport EditablePattern from \"../EditablePattern\";\nimport styled from \"styled-components\";\n\nconst PrintPreviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 18px;\n  justify-items: center;\n  width: ${props => (props.orientation === \"landscape\" ? \"610px\" : \"440px\")};\n  height: ${props =>\n    props.orientation === \"portrait\"\n      ? \"610px\"\n      : props.orientation === \"landscape\"\n      ? \"490px\"\n      : \"440px\"};\n  box-shadow: var(--shadow);\n  background: var(--surface);\n\n  //   @media only screen and (max-width: 600px) {\n  //     width: 85%;\n  //     height: auto;\n  //   }\n  //   @media only screen and (min-width: 600px) {\n  //     width: 80%;\n  //     height: auto;\n  //   }\n  //   @media only screen and (min-width: 768px) {\n  //     height: 100%;\n  //     width: auto;\n  //   }\n  //   @media only screen and (min-width: 992px) {\n  //     height: 100%;\n  //     width: 100%;\n  //   }\n  //   @media only screen and (min-width: 1200px) {\n  //     height: 100%;\n  //     width: auto;\n  //   }\n  //   @media screen and (max-device-width: 480px) {\n  //     width: 90%;\n  //     height: auto;\n  //   }\n\n  @media print {\n    width: 90%;\n    margin: 0;\n    padding: 0;\n    background: #fff;\n    box-shadow: none;\n    top: 0;\n\n    @page {\n      margin: 1cm;\n      size: ${props =>\n        props.orientation === \"landscape\" ? \"landscape\" : \"portrait\"};\n    }\n  }\n`;\n\nconst PrintPreview = props => {\n  const { orientation } = useContext(PatternContext);\n\n  return (\n    <PrintPreviewContainer\n      backgroundColor={props.backgroundColor}\n      orientation={orientation}\n    >\n      <EditablePattern />\n    </PrintPreviewContainer>\n  );\n};\n\nexport default PrintPreview;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LabelWrapper = styled.div`\n  width: 180px;\n`;\n\nconst StyledLabel = styled.label`\n  width: 100%;\n`;\n\nconst Label = props => {\n  return (\n    <LabelWrapper>\n      <StyledLabel htmlFor={props.for}>{props.children}</StyledLabel>\n    </LabelWrapper>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst formControlWrapper = props => {\n  return <StyledDiv>{props.children}</StyledDiv>;\n};\n\nexport default formControlWrapper;\n","import React from \"react\";\nimport Label from \"../../../../UI/FormControls/Label/Label\";\nimport FormControlWrapper from \"../../../../UI/FormControls/FormControlWrapper/FormControlWrapper\";\n\nconst SingleLineInput = props => (\n  <FormControlWrapper>\n    <Label for={props.label}>{props.label}</Label>\n    {props.children}\n  </FormControlWrapper>\n);\n\nexport default SingleLineInput;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst sharedStyles = css`\n  background: rgba(245, 245, 245, 0);\n  cursor: pointer;\n\n  &:disabled {\n    cursor: default;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledButton = styled.button`\n  ${sharedStyles}\n  border: 2px solid var(--black);\n  color: var(--black);\n  background: rgba(245, 245, 245, 0);\n  border-radius: 4px;\n  height: 32px;\n  width: 100%;\n  min-width: 100px;\n  max-width: 500px;\n  font-family: \"Patua One\", cursive;\n\n  transition: all 0.2s ease-in;\n\n  &:hover {\n    background: var(--trim);\n  }\n\n  &:active {\n    transition: all 0s;\n    color: var(--orange);\n  }\n`;\n\nconst StyledIconButton = styled.button`\n  ${sharedStyles}\n  width: 60px;\n  height: 60px;\n  border: 0;\n`;\n\nconst Button = props => {\n  return <StyledButton onClick={props.onClick}>{props.children}</StyledButton>;\n};\n\nexport const IconButton = props => (\n  <StyledIconButton onClick={props.onClick} disabled={props.disabled}>\n    {props.children}\n  </StyledIconButton>\n);\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SVG = styled.svg`\n  width: 100%;\n  height: 100%;\n  fill: none;\n  stroke-width: 2;\n  stroke: ${props => (props.active ? \"var(--orange)\" : \"var(--trim)\")};\n\n  & path:last-of-type {\n    stroke: none;\n    fill: ${props => (props.active ? \"var(--orange)\" : \"var(--trim)\")};\n  }\n`;\n\nconst PortraitIcon = (\n  <React.Fragment>\n    <path d=\"M5 30V2C5 1.44772 5.44772 1 6 1H26C26.5523 1 27 1.44772 27 2V30C27 30.5523 26.5523 31 26 31H6C5.44772 31 5 30.5523 5 30Z\" />\n    <path d=\"M15.928 17.12H15.388V18.536C15.972 18.664 16.336 18.82 16.48 19.004L16.36 20H13.12L13 19.004C13.104 18.868 13.324 18.736 13.66 18.608V13.124C13.332 13.004 13.112 12.868 13 12.716L13.12 11.72H16.3C17.412 11.736 18.24 11.94 18.784 12.332C19.336 12.716 19.612 13.404 19.612 14.396C19.612 16.212 18.384 17.12 15.928 17.12ZM16.108 13.028H15.388V15.812H16.192C16.736 15.812 17.14 15.704 17.404 15.488C17.676 15.272 17.812 14.9 17.812 14.372C17.812 13.836 17.664 13.48 17.368 13.304C17.08 13.12 16.66 13.028 16.108 13.028Z\" />\n  </React.Fragment>\n);\n\nconst LandscapeIcon = (\n  <React.Fragment>\n    <path d=\"M2 6L30 6C30.5523 6 31 6.44772 31 7L31 27C31 27.5523 30.5523 28 30 28L2 28C1.44771 28 0.999999 27.5523 0.999999 27L1 7C1 6.44771 1.44772 6 2 6Z\" />\n    <path d=\"M19 20H13.504L13.384 19.004C13.488 18.868 13.708 18.736 14.044 18.608V13.124C13.716 13.004 13.496 12.868 13.384 12.716L13.504 11.72H16.312L16.432 12.716C16.304 12.868 16.084 13.004 15.772 13.124V18.692H17.668C17.772 18.276 17.92 17.98 18.112 17.804L19 17.912V20Z\" />\n  </React.Fragment>\n);\n\nconst SquareIcon = (\n  <React.Fragment>\n    <path d=\"M5 4L27 4C27.5523 4 28 4.44772 28 5L28 27C28 27.5523 27.5523 28 27 28L5 28C4.44772 28 4 27.5523 4 27L4 5C4 4.44771 4.44772 4 5 4Z\" />\n    <path d=\"M17.08 13.028C16.808 12.956 16.524 12.92 16.228 12.92C15.932 12.92 15.692 12.996 15.508 13.148C15.332 13.292 15.244 13.5 15.244 13.772C15.244 14.036 15.312 14.244 15.448 14.396C15.584 14.548 15.852 14.68 16.252 14.792L17.32 15.104C17.896 15.272 18.352 15.536 18.688 15.896C19.032 16.248 19.204 16.768 19.204 17.456C19.204 18.272 18.908 18.916 18.316 19.388C17.732 19.86 17.004 20.096 16.132 20.096C15.652 20.096 15.156 20.036 14.644 19.916C14.14 19.788 13.72 19.612 13.384 19.388C13.384 19.34 13.384 19.248 13.384 19.112C13.384 18.976 13.412 18.744 13.468 18.416C13.524 18.088 13.604 17.82 13.708 17.612H14.848C14.976 17.86 15.052 18.192 15.076 18.608C15.356 18.728 15.68 18.788 16.048 18.788C16.424 18.788 16.732 18.7 16.972 18.524C17.212 18.348 17.332 18.096 17.332 17.768C17.332 17.616 17.32 17.492 17.296 17.396C17.272 17.292 17.196 17.184 17.068 17.072C16.948 16.952 16.772 16.856 16.54 16.784L15.304 16.424C14.048 16.064 13.42 15.264 13.42 14.024C13.42 13.296 13.684 12.716 14.212 12.284C14.74 11.844 15.428 11.624 16.276 11.624C17.132 11.624 17.968 11.816 18.784 12.2C18.784 12.248 18.784 12.34 18.784 12.476C18.784 12.612 18.756 12.844 18.7 13.172C18.644 13.5 18.564 13.768 18.46 13.976H17.32C17.184 13.784 17.104 13.468 17.08 13.028Z\" />\n  </React.Fragment>\n);\n\nexport const OrientationIcons = props => {\n  let OrientationIcon = PortraitIcon;\n  if (props.orientation === \"landscape\") OrientationIcon = LandscapeIcon;\n  if (props.orientation === \"square\") OrientationIcon = SquareIcon;\n\n  return (\n    <SVG\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      active={props.active}\n    >\n      {OrientationIcon}\n    </SVG>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PatternContext } from \"../../../../../../context/PatternContext\";\nimport SingleLineInput from \"../../SingleLineInput/SingleLineInput\";\nimport { IconButton } from \"../../../../../UI/Button/Button\";\nimport { OrientationIcons } from \"../../../IconButtons/IconButtons\";\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst orientations = [\"portrait\", \"landscape\", \"square\"];\n\nconst OrientationSelect = props => {\n  const { orientation, updateOrientation } = useContext(PatternContext);\n  const [activeOrientation, setActiveOrientation] = useState(orientation);\n\n  const updateOrientationHandler = orientation => {\n    setActiveOrientation(orientation);\n    updateOrientation(orientation);\n  };\n\n  const orientationButtons = orientations.map(orientation => {\n    const active = activeOrientation === orientation;\n    return (\n      <IconButton\n        key={orientation}\n        disabled={active}\n        onClick={() => updateOrientationHandler(orientation)}\n      >\n        <OrientationIcons orientation={orientation} active={active} />\n      </IconButton>\n    );\n  });\n\n  return (\n    <SingleLineInput label=\"orientation:\">\n      <ButtonsContainer>{orientationButtons}</ButtonsContainer>\n    </SingleLineInput>\n  );\n};\n\nexport default OrientationSelect;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst RangeSlider = styled.input`\n    -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n    width: 100%; /* Specific width is required for Firefox. */\n    background: transparent; /* Otherwise white in Chrome */\n  }\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n  \n  &:focus {\n    outline: none; /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */\n  }\n  \n  &::-ms-track {\n    width: 100%;\n    cursor: pointer;\n  \n    /* Hides the slider so custom styles can be added */\n    background: transparent; \n    border-color: transparent;\n    color: transparent;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: var(--orange);\n    cursor: pointer;\n    margin-top: -6px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */\n  }\n  \n  /* All the same stuff for Firefox */\n  &::-moz-range-thumb {\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: var(--orange);\n    cursor: pointer;\n  }\n\n  &::-ms-thumb {\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: var(--orange);\n    cursor: pointer;\n  }\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    background: var(--trim);\n    border-radius: 6px;\n  }\n  \n  &::-webkit-slider-runnable-track {\n    background: var(--trim);\n  }\n\n  &::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    background: var(--trim);\n    border-radius: 6px;\n  }\n  \n  &::-ms-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  &::-ms-fill-lower {\n    background: var(--trim);\n    border-radius: 6px;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    background: var(--trim);\n  }\n  input[type=range]::-ms-fill-upper {\n    background: var(--trim);\n    border-radius: 6px;\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    background: var(--trim);\n  }\n\n`;\n\nconst slider = props => (\n  <RangeSlider\n    type=\"range\"\n    name={props.label}\n    min={props.min}\n    max={props.max}\n    value={props.value}\n    onInput={props.onInput}\n    onChange={() => {}}\n  />\n);\n\nexport default slider;\n","import React, { useContext } from \"react\";\nimport { PatternContext } from \"../../../../../../context/PatternContext\";\nimport SingleLineInput from \"../../SingleLineInput/SingleLineInput\";\nimport Slider from \"../../../../../UI/FormControls/Slider/Slider\";\n\nconst ComplexitySlider = props => {\n  const { updateComplexity, complexity } = useContext(PatternContext);\n\n  const updateComplexityHandler = e => {\n    updateComplexity(e.target.value);\n  };\n\n  return (\n    <SingleLineInput label=\"size:\">\n      <Slider\n        min={0}\n        max={2}\n        value={complexity}\n        onInput={updateComplexityHandler}\n      />\n    </SingleLineInput>\n  );\n};\n\nexport default ComplexitySlider;\n","import React, { useContext } from \"react\";\nimport { PatternContext } from \"../../../../../context/PatternContext\";\nimport OrientationSelect from \"./OrientationSelect/OrientationSelect\";\nimport ComplexitySlider from \"./ComplexitySlider/ComplexitySlider\";\nimport Button from \"../../../../UI/Button/Button\";\n\nconst NewPattern = props => {\n  const { newPattern, orientation, complexity } = useContext(PatternContext);\n\n  return (\n    <React.Fragment>\n      <OrientationSelect />\n      <ComplexitySlider />\n      <Button onClick={() => newPattern(orientation, complexity)}>\n        Randomise\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default NewPattern;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NewPattern from \"./NewPattern/NewPattern\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  padding: 25px;\n`;\n\nconst PatternControlsBody = props => {\n  return (\n    <StyledDiv>\n      <NewPattern\n        randomise={props.randomise}\n        updateOrientation={props.updateOrientation}\n        updateComplexity={props.updateComplexity}\n        currentComplexity={props.size}\n      />\n    </StyledDiv>\n  );\n};\n\nexport default PatternControlsBody;\n","import React from \"react\";\nimport PatternControlsBody from \"./PatternControlsBody/PatternControlsBody\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background: var(--surface);\n  width: 400px;\n  height: 300px;\n  box-shadow: var(--shadow);\n  margin: 10px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst PatternControls = props => {\n  return (\n    <Container>\n      <PatternControlsBody />\n    </Container>\n  );\n};\n\nexport default PatternControls;\n","import React from \"react\";\nimport PatternContextProvider from \"../../context/PatternContext\";\nimport PrintPreview from \"../../components/EditablePattern/PrintPreview/PrintPreview\";\nimport styled from \"styled-components\";\nimport PatternControls from \"../../components/EditablePattern/PatternControls/PatternControls\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 80vw;\n  margin: auto;\n  justify-content: space-around;\n  align-items: center;\n  @media print {\n    height: auto;\n  }\n`;\n\nconst PreviewArea = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 650px;\n`;\n\nconst EditPattern = props => {\n  return (\n    <PatternContextProvider>\n      <Container>\n        <PreviewArea>\n          <PrintPreview />\n        </PreviewArea>\n\n        <PatternControls />\n      </Container>\n    </PatternContextProvider>\n  );\n};\n\nexport default EditPattern;\n","import React from \"react\";\nimport EditPattern from \"./containers/EditPattern/EditPattern\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --surface: #F7F3EE;\n    --trim: #E1DBD2;\n    --black: #483E3B;\n    --background: #F0EAE1;\n    --orange: #C74F33;\n    --shadow: 0 1px 1px rgba(0, 0, 0, 0.11), 0 2px 2px rgba(0, 0, 0, 0.11),\n    0 4px 4px rgba(0, 0, 0, 0.11), 0 6px 8px rgba(0, 0, 0, 0.11),\n    0 8px 16px rgba(0, 0, 0, 0.11);\n  }\n\n  * {\n    box-sizing: border-box;\n    list-style-type: none;\n    text-decoration: none;\n  }\n  \n  body {\n    color: var(--black);\n    background: var(--background);\n    margin: 0;\n    font-family: 'Patua One', cursive;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <EditPattern />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}